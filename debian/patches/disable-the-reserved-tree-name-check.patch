From: Mario Limonciello <mario_limonciello@dell.com>
Date: Mon, 26 Sep 2011 23:30:20 +0000 (-0500)
Subject: Disable the reserved tree name check.  This likely won't break any already working... 
X-Git-Url: http://linux.dell.com/cgi-bin/gitweb/gitweb.cgi?p=dkms.git;a=commitdiff_plain;h=7b4a0463c9cfd6837f034e3fc0435b35218706c8
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/dkms/+bug/855635
Description: Disable the reserved tree name check.  This likely won't break any already working situations, but may allow some situations that shouldn't be allowed to build.  It will require some additional testing yet.
---

Index: dkms-2.2.0.2/dkms
===================================================================
--- dkms-2.2.0.2.orig/dkms	2011-07-22 01:07:25.000000000 +0200
+++ dkms-2.2.0.2/dkms	2011-09-27 07:51:55.233442320 +0200
@@ -36,7 +36,6 @@
 
 # Some important regular expressions.  Requires bash 3 or above.
 # Any poor souls still running bash 2 or older really need an upgrade.
-readonly reserved_tree_names="build|original_module|tarball|driver_disk|rpm|source|kernel"
 readonly y_re='^(Y|y)'
 readonly mv_re='^([^/]*)/(.*)$'
 readonly rh_kernels='(debug|summit|smp|enterprise|bigmem|hugemem|BOOT|vmnix)'
@@ -1436,14 +1435,13 @@
 
 is_module_added() {
     [[ $1 && $2 ]] || return 1
-    valid_search_tree "$dkms_tree/$1/$2" || return 1
+    [[ -d $dkms_tree/$1/$2 ]] || return 2
     [[ -L $dkms_tree/$1/$2/source || -d $dkms_tree/$1/$2/source ]];
 }
 
 is_module_built() {
     [[ $1 && $2 && $3 && $4 ]] || return 1
     local d="$dkms_tree/$1/$2/$3/$4" m=''
-    valid_search_tree "$d" || return
     [[ -d $d/module ]] || return 1
     read_conf_or_die "$3" "$4" "$dkms_tree/$1/$2/source/dkms.conf"
     for m in "${dest_module_name[@]}"; do
@@ -1743,12 +1741,6 @@
     fi
 }
 
-# Test to see if a pathname is a "valid" pathname
-# to use for searching on.
-valid_search_tree() {
-    [[ -d $1 && ! ( $1 =~ $reserved_tree_names ) ]]
-}
-
 # Given a kernel object, figure out which DKMS module it is from.
 find_module_from_ko()
 {
@@ -1834,7 +1826,6 @@
     local ret=1 directory ka k a state oifs="$IFS" IFS=''
     for directory in "$dkms_tree/$1/$2/"${3:-[0-9].*}/${4:-*}; do
 	IFS="$oifs"
-	valid_search_tree "$directory" || continue
 	ka="${directory#$dkms_tree/$1/$2/}"
 	k="${ka%/*}"
 	a="${ka#*/}"
@@ -1855,7 +1846,6 @@
     local oifs="$IFS" IFS='' mv m v directory ret=1
     for directory in "$dkms_tree/"${1:-*}/${2:-*}; do
 	IFS="$oifs"
-	valid_search_tree "$directory" || continue
 	mv="${directory#$dkms_tree/}"
 	m="${mv%/*}"
 	v="${mv#*/}"
